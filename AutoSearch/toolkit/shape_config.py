
""" Shape configurations for single operator and subgraph evaluation """

matmul_args = [
    [1, 128, 128, 128],
    [1, 256, 256, 256],
    [1, 512, 512, 512],
    [1, 1024, 1024, 1024],

    [1, 64, 12544, 147],
    [1,65,12544,147],
    [1,65,3136,576],
    [1,513,49,4608],
    [1,2049,49,1024],
    [1,129,784,1152],
    [1,257,196,2304],
    [1,513,784,256],
    [1,1025,196,512],
    [1,65,3136,256],
    [1,2049,49,512],
    [1,513,49,2048],
    [1,257,3136,64],
    [1,129,784,512],
    [1,257,196,1024],
    [1,1025,196,256],
    [1,513,784,128],
    [1,513,49,1024],
    [1,129,784,256],
    [1,257,196,512],
    [1,65,3136,64],

    [1,64,12769,27],
    [1,16,3136,64],
    [1,64,3136,144],
    [1,64,3136,16],
    [1,16,3136,128],
    [1,32,784,128],
    [1,128,784,288],
    [1,128,784,32],
    [1,32,784,256],
    [1,48,196,256],
    [1,192,196,432],
    [1,192,196,48],
    [1,48,196,384],
    [1,64,196,384],
    [1,256,196,576],
    [1,256,196,64],
    [1,64,196,512],
    [1,1000,196,512],
]
matmul_args = [
    [1, 128, 128, 128],
    [1, 256, 256, 256],
    [1, 512, 512, 512],
    [1, 1024, 1024, 1024],
]

def get_shapes():
    matmul_shapes = []
    for arg in matmul_args:
        shape = [[arg[3], arg[1], arg[0]],
                 [arg[2], arg[3], arg[0]],
                 [arg[2], arg[1], arg[0]]]
        matmul_shapes.append(shape)
    # print(matmul_shapes)
    return matmul_shapes


# matmul_shapes = [
#    [[512, 512, 1],[512, 512, 1],[512, 512, 1]],
#    [[147, 64, 1],[12544, 147, 1],[12544, 64, 1]],
#]


shape_dict = {
    'matmul': get_shapes(),
    'matmul_int8': get_shapes(),
}

args_dict = {
    'matmul': matmul_args,
    'matmul_int8': matmul_args,
}
